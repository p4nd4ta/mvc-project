@model EditRoleViewModel
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit Role</h1>

<h5>RoleId: @Model.Id</h5>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRole" asp-controller="AdminAccounts" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <a asp-action="ListRoles" asp-controller="AdminAccounts" class="btn btn-warning"><i class="fas fa-chevron-left"></i> Back to List</a>
                <input type="submit" value="Update" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h4>Users in this role</h4>
    </div>
    <div class="card-body">
        @if (Model.Users.Any())
        {
            foreach (var user in Model.Users)
            {
                <h5 class="card-title">@user</h5>
            }
        }
        else
        {
            <center><h1 class="fas fa-id-card"></h1></center>
            <center><h4 class="card-title">No users in this role</h4></center>
        }
    </div>
    <div class="card-footer">
        <a asp-action="EditUsersInRole" asp-controller="AdminAccounts" asp-route-id="@Model.Id" class="btn btn-primary" style="width:auto"><i class="fas fa-tasks"></i> Add/Remove Users</a>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
